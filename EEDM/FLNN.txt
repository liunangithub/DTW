高维数据快速最近邻算法FLANN（构建数据索引，利用树结构索引方法，对索引空间进行层次划分，划分空间没有重叠的代表是k-d                             树，有重叠的代表是R-树)

    1、随机K-d树算法
        
        （1）经典的k-d树：找出数据集中方差最高的维度，此维度作为当前数据集的划分依据（划分为两个部分），对每个子集重复相同的过程。
              
        （2）随机k-d树：建立多棵随机k-d树，从具有高方差的N_d维中随机选取若干维度用来做划分。对随机k-d森林进行搜索的时候，所有的随机k-d树将共享一个有优先队列。增加数的数量可以加快搜索速度，但是由于内存负载的问题，树的数量必须控制在一定的范围内。
  
    2、优先搜索k-means树算法（用于需要高精度的情形）
          
         与随机k-d树算法相比，两者的区别在于，前者一次只利用一个维度进行划分，后者是根据数据的所有维度进行聚类。
       
        （1）建立优先搜索k-means tree：
                 a.建立一个层次化的k-means树；
                 b.每个层次的聚类中心，作为树的节点；
                 c.当某个cluster内的点数量小于k时，那么这些数据节点将作为叶子节点。
                   
                输入的参数有： 特征数据集D，分支系数K，最大迭代次数I，中心选择算法C。
